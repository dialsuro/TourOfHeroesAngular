{"ast":null,"code":"import { HEROES } from './mock-heroes';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nclass HeroService {\n  constructor(messageService) {\n    this.messageService = messageService;\n  }\n  getHeroes() {\n    const heroes = of(HEROES);\n    this.messageService.add('HeroService: fetched heroes');\n    return heroes;\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.MessageService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});\nexport { HeroService };","map":{"version":3,"names":["HEROES","of","HeroService","constructor","messageService","getHeroes","heroes","add","i0","ɵɵinject","i1","MessageService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\danna\\Documents\\gato\\Nueva carpeta\\TourOfHeroesAngular\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Hero } from './hero';\r\nimport { HEROES } from './mock-heroes';\r\nimport { Observable, of } from 'rxjs';\r\nimport { MessageService } from './message.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeroService {\r\n  constructor(private messageService: MessageService) { }\r\n  getHeroes(): Observable<Hero[]> {\r\n    const heroes = of(HEROES);\r\n    this.messageService.add('HeroService: fetched heroes');\r\n    return heroes;\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAqBC,EAAE,QAAQ,MAAM;;;AAGrC,MAGaC,WAAW;EACtBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAoB;EACtDC,SAASA,CAAA;IACP,MAAMC,MAAM,GAAGL,EAAE,CAACD,MAAM,CAAC;IACzB,IAAI,CAACI,cAAc,CAACG,GAAG,CAAC,6BAA6B,CAAC;IACtD,OAAOD,MAAM;EACf;;AANWJ,WAAW,C;mBAAXA,WAAW,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAXT,WAAW,C;SAAXA,WAAW;EAAAU,OAAA,EAAXV,WAAW,CAAAW,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}